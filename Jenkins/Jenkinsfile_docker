pipeline {
    agent any
    tools {
        jfrog 'jfrog-cli'
    }
    environment {
        HASH_COMMIT = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
    }
    stages {
        stage('Clone') {
            steps {
                git branch: 'main', url: "https://github.com/go-gitea/gitea.git"
            }
        }
        stage('Build Docker image') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'docker-registry-url', variable: 'DOCKER_REGISTRY_URL')]) {
                        def dockerImageName = "${DOCKER_REGISTRY_URL}:${HASH_COMMIT}"
                        docker.build(dockerImageName, '.')
                    }
                }
            }
        }
        stage('Push image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-registry-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD'),
                                     string(credentialsId: 'docker-registry-url', variable: 'DOCKER_REGISTRY_URL')]) {
                        def dockerImageName = "${DOCKER_REGISTRY_URL}:${HASH_COMMIT}"
                        sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD registry.iguana-devops.pp.ua"
                        sh "docker push $dockerImageName"
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                cleanWs()
                sh 'docker system prune -a -f'
            }
        }
    }
}
